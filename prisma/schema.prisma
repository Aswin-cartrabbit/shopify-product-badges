generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TokenType {
  OFFLINE
  ONLINE
}

enum ComponentStatus {
  ACTIVE
  INACTIVE
  DRAFT
  SCHEDULED
  EXPIRED
}

enum ComponentType {
  LABEL
  BADGE
  TRUST_BADGE
  BANNER
}

model stores {
  id       String  @id @unique @default(uuid()) @db.Uuid
  shop     String  @unique
  isActive Boolean @default(false)

  // Relationships
  sessions             session[]
  visual_components    visual_components[]
  billing_transactions billing_transactions[]

  @@index([id])
  @@index([isActive])
}

model session {
  id      String    @id
  type    TokenType
  content String?   @db.Text
  shop    String?
  storeId String    @db.Uuid
  scopes  String?   @db.Text
  expires DateTime?

  store stores @relation(fields: [storeId], references: [id])

  @@index([shop])
  @@index([storeId])
  @@index([type])
}

model visual_components {
  id      String @id @default(uuid()) @db.Uuid
  storeId String @db.Uuid

  name        String
  description String?
  type        ComponentType

  templates Json  @db.JsonB
  rules     Json  @db.JsonB
  settings  Json? @db.JsonB

  status ComponentStatus @default(ACTIVE)

  impressions Int @default(0)
  clicks      Int @default(0)

  isPublished Boolean   @default(false)
  publishedAt DateTime?
  version     Int       @default(1)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  store stores @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@unique([storeId, name])
  @@index([storeId])
  @@index([type])
  @@index([status])
  @@index([deletedAt])
  @@index([version])
  @@index([createdAt])
  @@index([updatedAt])
  @@map("visual_components")
}

model billing_transactions {
  id          String    @id @default(uuid()) @db.Uuid
  storeId     String    @db.Uuid
  chargeId    String    @unique // Shopify charge id
  planName    String
  status      String // ACTIVE, CANCELLED, etc.
  price       Float
  currency    String
  interval    String
  isTest      Boolean   @default(false)
  activatedAt DateTime  @default(now())
  cancelledAt DateTime?

  store stores @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@index([storeId])
  @@index([status])
  @@map("billing_transactions")
}
